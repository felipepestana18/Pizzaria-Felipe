// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzaria.PizzaAPI.Model.Context;

#nullable disable

namespace Pizzaria.PedidoAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20230323000113_AddPedido")]
    partial class AddPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pizzaria.ClienteAPI.Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.Bebida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Bebida");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("QtdBebidas")
                        .HasColumnType("int");

                    b.Property<int>("QtdPedido")
                        .HasColumnType("int");

                    b.Property<int>("QtdPizza")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPedido")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.PedidoBebidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BebidaId")
                        .HasColumnType("int");

                    b.Property<int>("IdBebida")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BebidaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoBebidas");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.PedidoPizzas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdPizza")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PedidoPizzas");
                });

            modelBuilder.Entity("Pizzaria.PizzaAPI.Model.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.Bebida", b =>
                {
                    b.HasOne("Pizzaria.PedidoAPI.Model.Pedido", null)
                        .WithMany("Bebidas")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.Pedido", b =>
                {
                    b.HasOne("Pizzaria.ClienteAPI.Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.PedidoBebidas", b =>
                {
                    b.HasOne("Pizzaria.PedidoAPI.Model.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzaria.PedidoAPI.Model.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebida");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.PedidoPizzas", b =>
                {
                    b.HasOne("Pizzaria.PedidoAPI.Model.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzaria.PizzaAPI.Model.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizzaria.PizzaAPI.Model.Pizza", b =>
                {
                    b.HasOne("Pizzaria.PedidoAPI.Model.Pedido", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Pizzaria.PedidoAPI.Model.Pedido", b =>
                {
                    b.Navigation("Bebidas");

                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
